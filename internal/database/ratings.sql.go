// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: ratings.sql

package database

import (
	"context"
)

const createRating = `-- name: CreateRating :one
INSERT INTO ratings (
    id,
    wine_id,
    user_id
) VALUES (?, ?, ?)
RETURNING id, wine_id, user_id, created_at, updated_at
`

type CreateRatingParams struct {
	ID     string
	WineID string
	UserID string
}

func (q *Queries) CreateRating(ctx context.Context, arg CreateRatingParams) (Rating, error) {
	row := q.db.QueryRowContext(ctx, createRating, arg.ID, arg.WineID, arg.UserID)
	var i Rating
	err := row.Scan(
		&i.ID,
		&i.WineID,
		&i.UserID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const deleteAllRatings = `-- name: DeleteAllRatings :exec
DELETE FROM ratings
`

func (q *Queries) DeleteAllRatings(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteAllRatings)
	return err
}
